version: 0.2
env:
  variables:
    ECR_REPO: 727646491714.dkr.ecr.us-east-1.amazonaws.com/lks-catalog-image
    ECR_REGION: us-east-1
    CONTAINER_NAME: catalog

phases:
  install:
    runtime-versions:
      nodejs: 16  # Docker version is not needed here; it's handled by the build environment
  pre_build:
    commands:
      - echo "Install Dependencies and login into ECR"
      - aws ecr get-login-password --region $ECR_REGION | docker login --username AWS --password-stdin $ECR_REPO
  build:
    commands:
      - echo "Run unit testing and build docker image"
      - docker build -t $CONTAINER_NAME:latest .
post_build:
  commands:
    - echo "Pushing the image to ECR..."
    # Tagging the image with 'latest' and build number
    - docker tag $CONTAINER_NAME:latest $ECR_REPO:latest
    - docker tag $CONTAINER_NAME:latest $ECR_REPO:${CODEBUILD_BUILD_NUMBER}
    
    # Pushing images to ECR
    - echo "Pushing the latest image..."
    - docker push $ECR_REPO:latest
    
    - echo "Pushing the build number image..."
    - docker push $ECR_REPO:${CODEBUILD_BUILD_NUMBER}
    
    # Generating imagedefinitions.json
    - printf '[{"name":"%s","imageUri":"%s"}]' $CONTAINER_NAME $ECR_REPO:latest > imagedefinitions.json
    
    # Verifying the existence of the imagedefinitions.json file
    - if [ -f imagedefinitions.json ]; then
        echo "imagedefinitions.json file created successfully.";
      else
        echo "Failed to create imagedefinitions.json file.";
        exit 1;
      fi

artifacts:
  files:
    - imagedefinitions.json
